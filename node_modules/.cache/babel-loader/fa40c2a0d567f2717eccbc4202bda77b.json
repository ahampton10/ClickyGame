{"ast":null,"code":"var _jsxFileName = \"/Users/ahampton/code/ClickyGame/src/components/Gallery/Gallery.js\";\nimport React from \"react\";\nimport Image from \"../Image/Image\";\nimport imageArray from \"../../images\";\nimport \"./Gallery.css\";\nimport \"../../../node_modules/uikit/dist/css/uikit.css\";\nimport \"uikit\";\nlet score = 0;\n\nclass Gallery extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      images: this.shuffleImages(imageArray)\n    };\n  }\n\n  shuffleImages(images) {\n    let counter = images.length;\n\n    while (counter > 0) {\n      let index = Math.floor(Math.random() * counter);\n      counter--;\n      let temp = images[counter];\n      images[counter] = images[index];\n      images[index] = temp;\n    }\n\n    return images;\n  }\n\n  handleClick(image) {\n    if (image.clicked === false) {\n      image.clicked = true;\n      score += 1;\n      alert(\"Correct! Your score is \" + score);\n    } else {\n      score === 0 ? score = 0 : score -= 1;\n      alert(\"You already clicked that one! Current score: \" + score);\n    }\n\n    const images = imageArray.slice();\n    this.setState({\n      images: this.shuffleImages(images)\n    });\n  }\n\n  renderImage(image) {\n    return React.createElement(Image, {\n      key: image.url,\n      src: image.url,\n      alt: image.name,\n      onClick: () => this.handleClick(image),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"image-grid uk-child-width-1-3@s uk-child-width-1-4@m\",\n      \"uk-grid\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.images.map(i => this.renderImage(i))));\n  }\n\n}\n\nexport default Gallery;","map":{"version":3,"sources":["/Users/ahampton/code/ClickyGame/src/components/Gallery/Gallery.js"],"names":["React","Image","imageArray","score","Gallery","Component","constructor","props","state","images","shuffleImages","counter","length","index","Math","floor","random","temp","handleClick","image","clicked","alert","slice","setState","renderImage","url","name","render","map","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,eAAP;AAEA,OAAO,gDAAP;AACA,OAAO,OAAP;AAEA,IAAIC,KAAK,GAAG,CAAZ;;AAEA,MAAMC,OAAN,SAAsBJ,KAAK,CAACK,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,KAAKC,aAAL,CAAmBR,UAAnB;AADG,KAAb;AAGD;;AAEDQ,EAAAA,aAAa,CAACD,MAAD,EAAS;AACpB,QAAIE,OAAO,GAAGF,MAAM,CAACG,MAArB;;AACA,WAAOD,OAAO,GAAG,CAAjB,EAAoB;AAClB,UAAIE,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,OAA3B,CAAZ;AACAA,MAAAA,OAAO;AAEP,UAAIM,IAAI,GAAGR,MAAM,CAACE,OAAD,CAAjB;AACAF,MAAAA,MAAM,CAACE,OAAD,CAAN,GAAkBF,MAAM,CAACI,KAAD,CAAxB;AACAJ,MAAAA,MAAM,CAACI,KAAD,CAAN,GAAgBI,IAAhB;AACD;;AACD,WAAOR,MAAP;AACD;;AAEDS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,QAAIA,KAAK,CAACC,OAAN,KAAkB,KAAtB,EAA6B;AAC3BD,MAAAA,KAAK,CAACC,OAAN,GAAgB,IAAhB;AACAjB,MAAAA,KAAK,IAAI,CAAT;AACAkB,MAAAA,KAAK,CAAC,4BAA4BlB,KAA7B,CAAL;AACD,KAJD,MAIO;AACLA,MAAAA,KAAK,KAAK,CAAV,GAAeA,KAAK,GAAG,CAAvB,GAA6BA,KAAK,IAAI,CAAtC;AACAkB,MAAAA,KAAK,CAAC,kDAAkDlB,KAAnD,CAAL;AACD;;AACD,UAAMM,MAAM,GAAGP,UAAU,CAACoB,KAAX,EAAf;AACA,SAAKC,QAAL,CAAc;AACZd,MAAAA,MAAM,EAAE,KAAKC,aAAL,CAAmBD,MAAnB;AADI,KAAd;AAGD;;AAEDe,EAAAA,WAAW,CAACL,KAAD,EAAQ;AACjB,WACE,oBAAC,KAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAACM,GADb;AAEE,MAAA,GAAG,EAAEN,KAAK,CAACM,GAFb;AAGE,MAAA,GAAG,EAAEN,KAAK,CAACO,IAHb;AAIE,MAAA,OAAO,EAAE,MAAM,KAAKR,WAAL,CAAiBC,KAAjB,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,sDADZ;AAEE,qBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG,KAAKnB,KAAL,CAAWC,MAAX,CAAkBmB,GAAlB,CAAsBC,CAAC,IAAI,KAAKL,WAAL,CAAiBK,CAAjB,CAA3B,CAJH,CADF,CADF;AAUD;;AA1DmC;;AA6DtC,eAAezB,OAAf","sourcesContent":["import React from \"react\";\nimport Image from \"../Image/Image\";\nimport imageArray from \"../../images\";\nimport \"./Gallery.css\";\n\nimport \"../../../node_modules/uikit/dist/css/uikit.css\";\nimport \"uikit\";\n\nlet score = 0;\n\nclass Gallery extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      images: this.shuffleImages(imageArray)\n    };\n  }\n\n  shuffleImages(images) {\n    let counter = images.length;\n    while (counter > 0) {\n      let index = Math.floor(Math.random() * counter);\n      counter--;\n\n      let temp = images[counter];\n      images[counter] = images[index];\n      images[index] = temp;\n    }\n    return images;\n  }\n\n  handleClick(image) {\n    if (image.clicked === false) {\n      image.clicked = true;\n      score += 1;\n      alert(\"Correct! Your score is \" + score);\n    } else {\n      score === 0 ? (score = 0) : (score -= 1);\n      alert(\"You already clicked that one! Current score: \" + score);\n    }\n    const images = imageArray.slice();\n    this.setState({\n      images: this.shuffleImages(images)\n    });\n  }\n\n  renderImage(image) {\n    return (\n      <Image\n        key={image.url}\n        src={image.url}\n        alt={image.name}\n        onClick={() => this.handleClick(image)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div\n          className=\"image-grid uk-child-width-1-3@s uk-child-width-1-4@m\"\n          uk-grid\n        >\n          {this.state.images.map(i => this.renderImage(i))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}